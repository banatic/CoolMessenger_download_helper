name: Build, Tag, and Release

on:
  workflow_dispatch:  # 수동 실행

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read version.txt
        id: read_version
        shell: bash
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
      

      - name: Git tag and push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build app
        run: pyinstaller --onefile --noconsole main.py

      - name: Create GitHub Release (manual API call)
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -s -X POST https://api.github.com/repos/${{ github.repository }}/releases \
            -H "Authorization: token $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
          {
            "tag_name": "v${{ env.VERSION }}",
            "name": "v${{ env.VERSION }}",
            "body": "Auto-generated release for version ${{ env.VERSION }}",
            "draft": false,
            "prerelease": false
          }
          EOF

      - name: Upload EXE to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          files: dist/main.exe
